{
  "registration": {
    "description": "Registration of participants will begin on Tuesday April 23rd, from 8:00 am in the entrance hall.\n\nFor registration it is mandatory to carry the Eventbrite ticket.",
    "icon": "registration",
    "image": "https://firebasestorage.googleapis.com/v0/b/hoverboard-experimental.appspot.com/o/images%2Fbackgrounds%2Fregistration.jpg?alt=media&token=27328646-d323-4cca-904c-75f021bc3ffe",
    "title": "Gates open / Registration",
    "tags": [
      "Service"
    ]
  },
  "lunch": {
    "description": "Fooooood! üçî\nThe best time to talk with speakers and attendees",
    "icon": "lunch",
    "image": "https://firebasestorage.googleapis.com/v0/b/hoverboard-experimental.appspot.com/o/images%2Fbackgrounds%2Flunch.jpg?alt=media&token=bc82aaff-92cc-4dcc-a00e-2b6f30a40225",
    "title": "Lunch",
    "tags": [
      "Service"
    ]
  },
  "break": {
    "description": "Coffeeeeeee! ‚òïÔ∏è",
    "icon": "coffee-break",
    "image": "https://firebasestorage.googleapis.com/v0/b/hoverboard-experimental.appspot.com/o/images%2Fbackgrounds%2Fcoffee-break.jpg?alt=media&token=7c2c929b-cb94-4be8-a05a-b3f678136cb7",
    "title": "Coffee break",
    "tags": [
      "Service"
    ]
  },
  "party": {
    "description": "Let‚Äôs talk and drink! üéâ From 19:00, come for chat, networking, drinks and food! üòé<br>The Makers Party will be held in \"Caf√© Oz Denfert\"<br>This is a large venue with australian beers and bar meals just at 10 minutes in transport from the conference venue, at Denfert Rochereau<br><br><h2>Directions</h2>Address: 3 Place Denfert-Rochereau, 75014 Paris<br>M ¬∞ Denfert-Rochereau, M ¬∞ Raspail (lines 4, 6)<br>Just take the Metro 4 to Denfert<br>https://goo.gl/maps/sC5kxJrWfhQ2<br><br>Attention no more metro 4 after 22h, but there is the bus 68 until 1h that makes the trip Denfert -> Montrouge<br>And there is the RER C to get in the center of Paris<br><br><h2>Infos</h2>The locker room will be free from 19h to 21h.<br>First 200 beers will be free üçª And there will be food boards to share",
    "icon": "party",
    "image": "https://firebasestorage.googleapis.com/v0/b/hoverboard-experimental.appspot.com/o/images%2Fbackgrounds%2Fparty.jpg?alt=media&token=8e413f01-373a-40bf-bb87-1dcf1d8e6af1",
    "title": "Makers Party! üéâ",
    "tags": [
      "Service"
    ]
  },
  "opening": {
    "description": "Come early and choose the best seat",
    "image": "https://firebasestorage.googleapis.com/v0/b/hoverboard-experimental.appspot.com/o/images%2Fbackgrounds%2Fclosing.jpg?alt=media&token=f02d014a-09ee-407e-88c7-b74093e00fed",
    "title": "Opening",
    "tags": [
      "Service"
    ]
  },
  "closing": {
    "description": "Thank you and see you next year! üëã",
    "image": "https://firebasestorage.googleapis.com/v0/b/hoverboard-experimental.appspot.com/o/images%2Fbackgrounds%2Fclosing.jpg?alt=media&token=f02d014a-09ee-407e-88c7-b74093e00fed",
    "title": "Thank you!",
    "tags": [
      "Service"
    ]
  },
  "VJG-9207": {
    "complexity": "Intermediate",
    "speakers": [
      "b86ae9dac45f40c077bbc700eb1af765c11031a5",
      "072cc4fde1730b8c940eb745e3ab284174184cfd"
    ],
    "description": "ConstraintLayout is a popular library for UI development on Android. It is deeply integrated with the Android Studio design tools, allowing developers to quickly create complex and reactive UIs. We recently released ConstraintLayout 2.0, which brings even more layout capabilities, virtual viewgroups, performance improvements and flexible ways to organize your UI. More uniquely, the library also provides powerful animation and motion handling capabilities via MotionLayout, a subclass of ConstraintLayout. All together, this new declarative approach makes it very easy to create modern, motion-enabled UIs for your application.\r\n\r\nThis talk will cover the new capabilities of the library, common pitfalls and solutions to UI patterns, performance aspects, integrating motion, and how to best take advantage of the library in your own application via a series of use cases and examples.",
    "language": "English",
    "title": "ConstraintLayout 2.0",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/camaelon/constraintlayout-2-dot-0"
  },
  "FVI-2317": {
    "speakers": [
      "379c162aac12eca2deca690287b54ad270cc2e40",
      "4a7ca4c16cbe81a612bf3011a3d3439f85408103"
    ],
    "title": "Kotlin Under the Covers",
    "language": "English",
    "description": "Kotlin offers many powerful language features that make it a welcome addition to the Android developer's toolkit. But some of these features may do significant work behind the scenes, including allocating object and reflection. This dynamic is not obvious from the Kotlin code, so how do we know when this is happening? This talk will go over some of these areas that you should be aware of, as well as the tools that help us discover this kind of information about our code.",
    "complexity": "Intermediate",
    "tags": [
      "Android Development"
    ]
  },
  "KOV-9403": {
    "complexity": "Intermediate",
    "speakers": [
      "5978cd774e924d51f2923d8620f1346a3392263c"
    ],
    "description": "Animations bring your app to life but often we write them as pre-canned sequences that once started can‚Äôt be interrupted or redirected. Modern Android apps are reactive to state changes‚Ä¶ your animations should be as well. This talk looks at techniques for writing animations that work like state machines, that can be interrupted or retargeted while running. We‚Äôll look at ways to architect your animations to achieve this, and libraries and classes that we can utilize.",
    "language": "English",
    "title": "Motional Intelligence: Build smarter animations",
    "tags": [
      "Android Development"
    ]
  },
  "LWJ-6534": {
    "complexity": "Intermediate",
    "speakers": [
      "9294a55b442b986b06aafe0a08db568263a87d23"
    ],
    "description": "**LeakCanary 2 Alpha 1** will be released right before this talk, come learn about **hot new features, crazy improvements** and **gnarly implementation details**!\r\n\r\nLeakCanary 1 helped detect memory leaks but had several issues: constant **freeze of the UI**, **OOM crashes** while analyzing, results **hard to analyze**, a confusing API, and an ugly logo.\r\n\r\nNo more! Come learn about **multiple leak detection**, **leak grouping**, **smarter analysis results**, **counting leaks in production**, **detecting leaks in UI tests**... and much more!\r\n\r\nOh and LeakCanary 2 is **100% Kotlin**, updated to **Android X**, and it even has a **cute new logo**!",
    "language": "English",
    "title": "LeakCanary 2: Leaner, Better, Faster, Kotliner!",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/pyricau/leakcanary-2-leaner-better-faster-kotliner"
  },
  "TCT-1480": {
    "complexity": "Beginner",
    "speakers": [
      "a14457ee24a86a604c55d6774bed5483b630e78f"
    ],
    "description": "Navigating between screens is pretty simple right? No it‚Äôs not. Actually not all the time.\r\nLast year Google introduced Navigation Component tool helping us standardise the design and the implementation of how screens can pass in front of the Android users.\r\n\r\nWe started to use it with my team last summer and we learned a lot about its benefits, and its pitfalls. In this presentation, I'll try to give a feedback about what we learned, what hope you can put in it and what‚Äôs not to expect from it.\r\n\r\nHere is an outline of the talk:\r\n\r\n- The Navigation Component tool and API\r\n- Testing your navigation\r\n- Specific use cases\r\n    - Handling multi start points\r\n    - Handling custom transitions and Shared Elements\r\n    - How to handle other entities than Fragments\r\n    - Handling the back navigation\r\n- Implementing the navigation logic\r\n    - 3 examples of implementation patterns we found\r\n    - Alternative example to Navigation Components\r\n- The lib is in alpha, what is it implied by this, for real\r\n- Single or Multiple activities what to choose?\r\n- Integrate nav controller in an existing app\r\n- Conclusion\r\n    - What can it bring to your app?\r\n    - Should we use it?\r\n",
    "language": "English",
    "title": "Navigation Component, feedback from the trench",
    "tags": [
      "Android Development"
    ],
    "presentation": "http://bit.ly/nav-component"
  },
  "TWY-4180": {
    "complexity": "Intermediate",
    "speakers": [
      "2a406d23a849d9691b9bc98d967206996e30b252"
    ],
    "description": "Working with a design system can be hugely rewarding: layouts can be created and modified using shared components. This should result in faster development and consistent designs across the app. But getting there is a slow and painful process.\r\n\r\nWhen implementing a design system you have to make many decisions, like: Where do you start? What actually makes a component? And how flexible should components be? This talk will shed some light on these issues by taking you through Deliveroo's process of adopting the design system in its three Android apps.",
    "language": "English",
    "title": "Consistency is Key - Working with a Design System",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/marianeum/consistency-is-key-working-with-a-design-system-android-makers"
  },
  "XQT-5940": {
    "complexity": "Beginner",
    "speakers": [
      "cac5b6bc1f05caa67061c64989f324a517735a29",
      "b1e2d11f8669d228ed5dd388540aae23c9b81f27"
    ],
    "description": "English TL;DR: It's a stupid french speaking podcast about leeks  ¬Ø\\_(„ÉÑ)_/¬Ø\r\n\r\nSi vous ne savez toujours pas pourquoi \"Poireau\" ou que si mais que vous n'avez pas rigol√© √† la blague la premi√®re fois, ni les 3000 autres fois parce qu'en r√©alit√© c'est pas si dr√¥le, avouons le... Alors viendez, √ßa ne sera toujours pas plus dr√¥le, ni plus intelligent mais vous pourrez dire en sortant: \"Je ne sais absolument pas pourquoi j'ai √©t√© voir √ßa\", et √ßa, √ßa n'a pas de prix.\r\n\r\n\r\nPS: √âpisode 6 car on sait tous que le 6√®me est en r√©alit√© le 3√®me !",
    "language": "French",
    "title": "Android Leaks @Android Makers - √âpisode 6 : Le retour des poireaux",
    "tags": [
      "Android Development"
    ]
  },
  "XEB-2115": {
    "complexity": "Beginner",
    "speakers": [
      "289e5c0e7494a73fc56ebc509dfe5aa9a1d564c2"
    ],
    "description": "Our responsibility as developers is to ship high quality features in a timely manner. But there are many factors which can hinder development: from tightly coupled, untested codebases, to differences between team members in architecture visions and API knowledge, to time pressure. \r\nWe tend to look at app development from one point of view: the code. But the team that writes that code is as important as the code, so we need to work on architecting a good, solid team as well, making sure that we create a common language in the team, a shared vision and an environment where team members learn and communicate freely.\r\n\r\nIn this talk, I‚Äôm going to cover some of the lessons I learned along the way and show how we, a team of four, applied them in rewriting Plaid - an open source app, initially created to showcase Material Design. We‚Äôll see how intertwined the code and the team were for the project.\r\n",
    "language": "English",
    "title": "Pragmatic crafting",
    "tags": [
      "Android Development"
    ]
  },
  "comedy": {
    "complexity": "Beginner",
    "speakers": [
      "379c162aac12eca2deca690287b54ad270cc2e40",
      "4a7ca4c16cbe81a612bf3011a3d3439f85408103"
    ],
    "description": "",
    "language": "English",
    "title": "Closing conference",
    "tags": [
      "Android Development"
    ]
  },
  "BXQ-5942": {
    "complexity": "Intermediate",
    "speakers": [
      "577e9daa13bf52cf00a48a6304fc2332e060d73d"
    ],
    "description": "Android is a marvelous platform that has been evolving for more than 10 years. Having such a large framework, so many methods and classes while maintaining legacy generally ends up with a price to pay: some parts of the SDK comes with their questions and puzzlers.\r\n\r\nIn this talk, we will present some of the most head-scratching API namings/usages/results and give an explanation for each of them.",
    "language": "English",
    "title": "Android Puzzlers: Traps, Pitfalls and Corner Cases",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/cyrilmottier/android-puzzlers-traps-pitfalls-and-corner-cases"
  },
  "XPP-1467": {
    "complexity": "Beginner",
    "speakers": [
      "3e271f509e5ca12cfef7d51e98fde031c124e382",
      "6655ec55dd5d139ccb4d6f8724017c05c51555c3"
    ],
    "description": "Android apps are not just series of static screens. To create a great app you will have to bring it into life with meaningful, helpful and delightful motion.\r\n\r\nHowever, a good design is not worth much unless it gets implemented correctly. In this joint designer-developer talk we discuss the workflow from the idea, to design and development and all the way to user‚Äô hands. \r\n\r\nWe describe when to use motion and when not to as well as selecting the right type and right intensity of motion. We then dive into the best implementation strategies including communicating state, navigation, feedback, tutorial and delightful animations.",
    "language": "English",
    "title": "Meaningful motion design and how to implement it",
    "tags": [
      "Android Development"
    ]
  },
  "WLQ-5551": {
    "complexity": "Beginner",
    "speakers": [
      "786f4ff40c2d8aeef85a8dc997006cae5a4f9dc3"
    ],
    "description": "Deploying an Android app to the play store always contains some cost in it. Furthermore the user isn't always keen to download (again) our latest versioned app. How about doubling the cost of development with the iOS app into account (or Web)?  \r\nAt Square, we came up with a system in which the server owns the workflow of the client. This means the client doesn't know before hand which screen, which image or text it's gonna show next.\r\n\r\nIn this talk, we'll:\r\n\r\n- Know why Square ended up choosing this system.\r\n- Discover how we built it.\r\n- Look at the challenges, the pros and cons of such an architecture.\r\n- Talk about how we want to alter it for the future.\r\n\r\nAttendees to this talk will be expose to solutions for problems every company is facing but don't address.",
    "language": "English",
    "title": "Server Driven UI Workflow",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/oldergod/server-driven-ui-workflow"
  },
  "QMW-7145": {
    "complexity": "Expert",
    "speakers": [
      "96c6201599b5aea0e119a60ab9ebbf185be421b5"
    ],
    "description": "If you‚Äôve used Firebase Performance Monitoring, you know that it automatically discovers and reports performance metrics for all the HTTP transactions in your app.  But have you ever wondered how it does that?  Android doesn‚Äôt provide any APIs to listen in on an arbitrary connection (that would be a security problem!), and Firebase supports URLConnection, Apache, and OKHTTP APIs.  The secret here is bytecode manipulation at build time using the Transform API provided by the Android build tools.  Join this session to find out how the Firebase Performance Monitoring Gradle plugin intercepts and measures HTTP transactions at runtime with some assistance from bytecode manipulation at build time.\r\n",
    "language": "English",
    "title": "(Android) Transformers - bytecode in disguise!",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/codingdoug/android-transformers-bytecode-in-disguise"
  },
  "DCF-5057": {
    "complexity": "Intermediate",
    "speakers": [
      "4da226db53a14dcc70be061a323bc3afd6d9146d"
    ],
    "description": "In 2018 Android App Bundles were introduced as the publishing format for Android. Alongside this dynamic delivery enable shipping features to users on demand.\r\nIn this session you'll learn about Android App Bundles, Dynamic Delivery and how to structure code and resources based on publicly available code samples.\r\nAlso you'll learn how to make an instant experience available for your app.",
    "language": "English",
    "title": "Best practices for a modularized app",
    "tags": [
      "Android Development"
    ]
  },
  "JSD-5161": {
    "complexity": "Beginner",
    "speakers": [
      "6232967f8d0646a8551e28d2923630d719c4c42f",
      "5978cd774e924d51f2923d8620f1346a3392263c"
    ],
    "description": "Vector assets are lightweight and sharp on every screen size, but working with them can be complicated. Android doesn‚Äôt directly support SVG, potentially leading to conversion and ownership issues. This talk will cover what designers and developers need to know to work together to create static and animated vector assets. We‚Äôll cover the capabilities of Android‚Äôs vector formats, how they influence producing assets in graphics packages (with a focus on Sketch) and how to efficiently export them. We'll also look at tooling and workflows that allow designers and devs to collaborate on creating vector animations.",
    "language": "English",
    "title": "Vector Workflows",
    "tags": [
      "Android Development"
    ]
  },
  "MAW-7262": {
    "complexity": "Beginner",
    "speakers": [
      "289e5c0e7494a73fc56ebc509dfe5aa9a1d564c2",
      "c3ad78f46bc7565372f4b8228d6e3ddce264ecc6"
    ],
    "description": "In this workshop we‚Äôll be looking at coroutines - Kotlin‚Äôs way of handling asynchronous programming. We‚Äôll see what they are, how they work, how to call tasks written with coroutines and get the results of the tasks, how to convert existing APIs to coroutines, how to use coroutines in an Android app, especially together with Architecture Components and, finally, see how to test coroutines. \r\n",
    "language": "English",
    "title": "Coroutines, a new scope",
    "tags": [
      "Android Development"
    ]
  },
  "REB-6912": {
    "complexity": "Intermediate",
    "speakers": [
      "4227e79e90c24f18fa5d21d0f583b1ee263216bd"
    ],
    "description": "In this session, we'll cover how elevation works on Android. From an overview of the available APIs, seeing what is new in Android P, and getting to the nitty gritty of how shadows are rendered on HWUI and Skia. Lastly, we'll learn how to take advantage of the existing APIs and work within their limitations to obtain original and unique results.\n\nThis talk follows the track of existing blog article(s) on the topic: https://blog.usejournal.com/playing-with-elevation-in-android-91af4f3be596 and its two follow-ups. There is also an open source app, Uplift, which will be used to showcase the effects as we talk about them: https://github.com/rock3r/uplift",
    "language": "English",
    "title": "Uplift ‚Äî Material shadows on Android",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/rock3r/uplift-material-shadows-on-android"
  },
  "RBP-6855": {
    "complexity": "Beginner",
    "speakers": [
      "14c3b8582f3c1821ba86739393cd027ec8e321c9"
    ],
    "description": "You've been working as an engineer for a while, and now you want more. More responsibilities, more decision making power, more money. But where do you even start? Become an engineering manager right? Not so fast. \r\n\r\nIn this talk, we'll go over how to choose the best career path for *you*. There are many ways of becoming the leader you know you deserve to be, and not all of them are obvious nor conventional. We'll cover the different options and the skills required to get there, but we'll also talk about why *not* to become a manager, or even a tech lead.\r\n\r\nFinally, you decide to make the jump. You \"made it\" right? But, now what? How to become the best leader you can possibly be? How to give constructive feedback? How to set expectations with your people? And what's next? Keep climbing?... or choose to go back to building.",
    "language": "English",
    "title": "Becoming a Leader in Tech: How to boost your career without losing your mind",
    "tags": [
      "Android Development"
    ]
  },
  "KSG-3809": {
    "complexity": "Beginner",
    "speakers": [
      "b90144ca0b7e987da4eac1e6ac116b1f1b2cb6e2"
    ],
    "description": "Sharing code between platforms is a powerful technique, but it may be hard to accomplish without rich APIs that we have in Android, JVM, or iOS platforms. Kotlin Multiplatform libraries can be used to fix that, bringing rich APIs directly in the common Kotlin code. \r\n\r\nWhat an exciting frontier!\r\n\r\nIn this talk we'll go over the creation of a Kotlin Multiplatform library. You'll learn how modules for each platform work, decide what parts of the code makes sense to share and what doesn't. All based in the experiences gathered after creating a library at Mixtiles used to fetch images from different cloud providers.",
    "language": "English",
    "title": "Building a library for Android and iOS using Kotlin Multiplatform",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/malmstein/building-a-multiplatform-library-for-ios-and-android"
  },
  "VOJ-6007": {
    "complexity": "Beginner",
    "speakers": [
      "d2a0ee8397721dab722a6f969532df215dad171c"
    ],
    "description": "You want to style the title of dialogs throughout your app and you think it should be simple enough. However, once you dive into it, you might start asking questions - should I use alertDialogTheme or alertDialogStyle? Should I use windowTitle or dialogTitle? It is no secret that the styling and theming system in Android is complex, but I promise there is some method to the madness! We can avoid writing custom components just to achieve pixel perfection if we know how tame to the beast.\r\n\r\nIn this talk, we will learn about the difference between themes and styles, the hierarchy of different styling techniques and how to use them effectively. We will also learn how they work internally, and the best practices of how to apply them. We will wrap up by discussing the newest app theme in town - the Material Components Theme and the attributes that come with it, like ‚ÄúcolorOnSurface‚Äù.  \r\n\r\nAt the end of this talk, you will know how to style your app like a pro with the correct use of Styles, Themes, TextAppearance and sensible defaults while specifying colour, shape and typography through Material Theming.\u2028",
    "language": "English",
    "title": "Styles, Themes, Material Theming, Oh My!",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/anitas3791/styles-themes-material-theming-oh-my"
  },
  "MKQ-2052": {
    "complexity": "Intermediate",
    "speakers": [
      "7d6c66f700e20f82bdfa02c954a83d13f05d63df"
    ],
    "description": "Data binding is great for eliminating boilerplate and keeping UIs in sync with your state‚Ä¶ but there's a lot more that it can do. This talk will take you through the more advanced features of Data Binding, beyond the basics. It will cover using custom binding adapters, two-way binding, animations and testing considerations. Moreover it examines how using Data Binding influences your app's architecture. You'll learn how to get the most out of Data Binding so that you can write less repetitive, safer, efficient apps.",
    "language": "English",
    "title": "Advanced Android Data Binding",
    "tags": [
      "Android Development"
    ]
  },
  "CRY-8750": {
    "complexity": "Beginner",
    "speakers": [
      "f0b60b05124ad1a0b3e76cca09dd215645931221"
    ],
    "description": "Have you dreamed of deliciously sweet animations in your app but have no idea where to start? üç´ What about creating some delightful UI treats to keep your users intrigued and wanting to discover more? üç¶\r\nJoin Rebecca on this journey into a World of Pure Android Animation ‚ú®.  From creating custom view animations on a Canvas to using MotionLayout to create complex layout animations, there is something for everyone. We will also see how to create your own AnimatedVectorDrawable using Shape Shifter. No golden ticket required. ",
    "language": "English",
    "title": "In a World of Pure Android Animation  üç≠üç´",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/riggaroo/in-a-world-of-pure-android-animation"
  },
  "OVK-2477": {
    "complexity": "Intermediate",
    "speakers": [
      "7995936e8a151a29c1a6fa72ac7db5ae373b201d"
    ],
    "description": "In this talk, we will learn how to build an application with the ARCore Android SDK. We'll start with a quick look at physically based rendering, and how to find or create these 3D models. \r\n\r\nThen we'll learn the basics of adding virtual objects and interfaces to our environment, using the Sceneform library. \r\n\r\nWe'll close with Cloud Anchors and Augmented Images, which are used to create collaborative and interactive augmented reality experiences.",
    "language": "English",
    "title": "ARCore - Basics and Tools",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/kanawish/arcore-basics-and-tools"
  },
  "AFF-5103": {
    "complexity": "Beginner",
    "speakers": [
      "109d33decd394492fbd5b99a92dd7607d821d27c"
    ],
    "description": "The fact that \"apps\" for the Google Assistant and for Android are both available on Android smartphones can be the cause of some confusion. Do I have to go to the Play Store to download and install an \"app\" for the Google Assistant? Can I launch a Google Assistant experience from an Android app? How to integrate advanced voice recognition (NLP or other) on existing apps? What experience should I offer on my app?  In this talk I will answer these questions, do a comparison of the ecosystems and how they can work together.",
    "language": "English",
    "title": "Google Assistant for Android developers",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/elainedb/google-assistant-for-android-developers"
  },
  "GAO-2888": {
    "complexity": "Beginner",
    "speakers": [
      "822864bbbee048b2f933cbe80197c80b36e291a3"
    ],
    "description": "In this talk, you will learn about best practices to gather insights,  mixed with real life experiences and anecdotes. Understand why people are doing certain tasks, not only what they are doing. \r\nBasically, improve your apps, by asking the right questions.\r\n\r\nNo budget for user research? Learn what you can do under the radar to understand the user behaviour better. You will get examples on how it can be done, regardless if you are a bigger company, or an indie developer! ",
    "language": "English",
    "title": "The difference between what and why.",
    "tags": [
      "Android Development"
    ]
  },
  "HJM-2968": {
    "complexity": "Beginner",
    "speakers": [
      "a14457ee24a86a604c55d6774bed5483b630e78f",
      "4227e79e90c24f18fa5d21d0f583b1ee263216bd",
      "d2a0ee8397721dab722a6f969532df215dad171c",
      "f0b60b05124ad1a0b3e76cca09dd215645931221",
      "de70b5c556753d7ea84b24cf96b188e82d2e84ef",
      "3e271f509e5ca12cfef7d51e98fde031c124e382",
      "6655ec55dd5d139ccb4d6f8724017c05c51555c3",
      "577e9daa13bf52cf00a48a6304fc2332e060d73d"
    ],
    "description": "A bunch of Android experts will come on stage, discovering a few applications in live, they will provide feedback and advices to the developers.\r\nPropose your application for the review by sending the Play Store link or the APK to contact@androidmakers.fr",
    "language": "English",
    "title": "App Clinic",
    "tags": [
      "Android Development"
    ]
  },
  "DFO-2916": {
    "complexity": "Beginner",
    "description": "Functions that take a long time to return are a problem because they block the calling thread, which could be the main thread, where your UI runs.\r\nYou can workaround this issue by using callbacks instead, but it introduces other issues:\r\n\r\n- Mangled functions signatures\r\n- Inability to use even simple language constructs like `if`, `while` or local variables\r\n- More verbose usage (boilerplate never scales well)\r\n- Harder error/exception handling\r\n\r\nSeeing it brings more problems than it solves helps us understand why people refer to **callback hells**.\r\n\r\nThere's been attempts to circumvent these issues with AsyncTask (no comment), Futures (from JDK, Guava, and more), Tasks API (from Google Play Services), reactive programming (e.g. RxJava used for threading and callbacks), and none solves all the issues mentioned above.\r\n\r\n**Kotlin coroutines are changing the game** with an implementation of the nearly 60 years old concept that **brings back the simplicity of blocking code**, without the blocking issue.\r\n\r\nIn this talk, you'll see how any waiting or blocking code can be made easier to write and read.\r\nYou'll learn how to use kotlinx.coroutines correctly in Android, and peek at how it all works.",
    "language": "English",
    "speakers": [
      "cb2e16407c778831b4f990bfbd556135c507867f"
    ],
    "title": "Making any codebase more readable with Kotlin coroutines",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://androidmakers2019.louiscad.com/assets/player/KeynoteDHTMLPlayer.html#0"
  },
  "SCS-0941": {
    "complexity": "Beginner",
    "speakers": [
      "be0712870b4c90334f276a529f5a8f3fcebe50da"
    ],
    "description": "Kotlin changed the way we code!\r\nBut did you already adapt the way you test?\r\nThe language offers new possibilities but also offers challenges, just think of Coroutines.\r\nLet's write nice and clean Kotlin tests together.\r\n",
    "language": "English",
    "title": "Effective Unit testing with Kotlin",
    "tags": [
      "Android Development"
    ]
  },
  "VQS-5461": {
    "complexity": "Intermediate",
    "speakers": [
      "bee9073d3e8e1f966338d0cf74c4d34708270008"
    ],
    "description": "Writing multi-threaded software is hard. Debugging and chasing down problems like deadlocks, race conditions, and memory leaks is even harder.\r\nKotlin takes a different approach. It doesn't have to be so hard. Learn how you can write concurrent and asynchronous software using coroutines. And stop sharing memory to communicate mutable data. Leverage channels to safely communicate across coroutines.",
    "language": "English",
    "title": "Concurrency doesn't have to be hard: Kotlin Coroutines and Channels",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/jsaund/android-makers-concurrency-doesnt-have-to-be-hard-kotlin-coroutines-and-channels"
  },
  "VUR-7482": {
    "complexity": "Beginner",
    "speakers": [
      "855a1af7d899d1dd7bfe11b340f628fe70ef54a9"
    ],
    "description": "Even among machine learning experts, we have encountered many myths about on-device machine learning:\r\n1. Android is not powerful enough for machine learning\r\n2. Machine learning is not for me, it‚Äôs for people with PhDs\r\n3. Machine learning requires a lot of data - millions and billions of samples.\r\n\r\nIn this talk, Hoi will bust some myths with live demos and introduce best practices for developers to get around the reality of building everyday ML use cases including barcode scanning, AR stickers and more, on Android. Also, some core Android functionalities might surprise you‚Ä¶ in a good way.\r\n",
    "language": "English",
    "title": "Myths and Reality of Android Machine Learning",
    "tags": [
      "Android Development"
    ]
  },
  "AMU-5195": {
    "complexity": "Beginner",
    "speakers": [
      "fb805760b311d7dea7963afcd97f9613303f7722"
    ],
    "description": "After TensorFlow Lite, MLKit promises to be the new tool to make apps smarter. The possibility to integrate a model directly on Firebase is crazy, but the second part (often put aside) deserves attention.\r\nBased in majority on deprecated Mobile Vision, the few models offered by Google already give us something to enjoy. Most of them is available offline: so we can imagine the extent of the possibilities!\r\n\r\nCome with me to discover these APIs: how and why to use them.",
    "language": "English",
    "title": "Do you want an easy way to add Machine Learning into your app?",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/sandraddev/do-you-want-an-easy-way-to-add-machine-learning-into-your-app"
  },
  "QIW-9288": {
    "complexity": "Intermediate",
    "speakers": [
      "8f68e78b32a10a76333bab554eb2ad6532d0aa50"
    ],
    "description": "Until now, in order to perform background work in Android, developers had to choose between multiple execution options. At Google I/O 2018, the Android team launched WorkManager as part of the Android Jetpack. This library provides a simple and clean interface to specify deferrable, asynchronous tasks and when they should run.\r\nThe presentation will include an overview about the existing background solutions, what‚Äôs happening behind the scenes and why and when we should use WorkManager. Also, we will discover details about the architecture of the WorkManager library and about the main components(Worker, WorkRequest, WorkManager, WorkInfo) of it. Finally, we will highlight how to use WorkManager for scenarios like chained sequences of tasks that run in a specified order, unique named sequences, tasks that pass and return values and how to apply constraints in order to decide when to run the task.",
    "language": "English",
    "title": "Workout your tasks with WorkManager",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/magdamiu/workout-your-tasks-with-workmanager"
  },
  "XQK-8719": {
    "complexity": "Beginner",
    "speakers": [
      "7c3c8d4952ab519203050d818cb1f3d6193ec605"
    ],
    "description": "*Vector-drawables, 9 Patches, layer-list, multi-densities, screen sizes*: Android provides many ways to use graphical resources in an application and deal with the fragmentation. The goal of this talk is to take a tour of the available resources that developers can use in their application, see what tools Android Studio provides to manage those resources, how these resources are embedded into the APK and what how the framework uses them at runtime.",
    "language": "English",
    "title": "A resourceful talk about Android Resources",
    "tags": [
      "Android Development"
    ]
  },
  "RBU-3913": {
    "complexity": "Beginner",
    "speakers": [
      "c51d1bb67a1dc86f27d7e9db63baae388dba5816",
      "78c3edf266c08db4ad6c86f2019ab7b7fb1082f4",
      "bb6d8ab858c76a2ae9bd19825398562f8c36b3d5"
    ],
    "description": "What‚Äôs that Flutter everybody in mobile development is talking about these days? Another new thing that will be forgotten by this time next year or a true revolution in mobile apps development? Is it really worth my time?\r\n\r\nFlutter is Google's mobile SDK for crafting high-quality native interfaces on iOS and Android in record time. Flutter works with existing code, is used by developers and organizations around the world, and is free and open source.\r\n\r\nBeyond the commercial pitch, in this codelab you will create a simple Flutter app and discover the features that make Flutter one of the most pleasant and productive development platform.\r\n\r\nYou need to bring your own laptop and validate the following steps :\r\n\r\n* https://flutter.io/docs/get-started/install\r\n* https://flutter.io/docs/get-started/editor\r\n* https://flutter.io/docs/get-started/test-drive\r\n\r\nThe demo app is running on your simulator? Let's go with Flutter!!!\r\n\r\nNB: We can speak in French or in English.",
    "language": "English/French",
    "title": "Write your first Flutter App",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://docs.google.com/presentation/d/1E4ZXwaEgjLyJeJprGJDm4_Ul4G78q6Zk4lRoTQQ6pOo/edit"
  },
  "NIZ-9897": {
    "complexity": "Beginner",
    "speakers": [
      "76bf11899131efa3b3d975aa262c6c4a374e4dcf"
    ],
    "description": "Android is not only for regular mobile apps - it can be used to make self-service Kiosks as well. \r\n\r\nYou will learn from my experience of leading the development of Android-based self check-in Kiosks about the challenges of locking the system to run single app and blocking any security holes or stability issues.  You'll learn about how to architect the remote maintenance and management infrastructure for Android-based single-purpose applications in a mission-to-Mars autonomous environment and what to expect from Google's new Android Management API (now in BETA). We'll talk not only about the software, but also about the hardware and UI/UX side of creating Kiosks and the unexpected challenges and bottlenecks ahead. You'll leave the talk knowing about the peculiarities of the emerging field of COSU (company owned single use) devices and will be prepared to tackle them heads on when having your next Kiosk project on Android. ",
    "language": "English",
    "title": "Locking, blocking and rocking Android for Self-service Kiosks",
    "tags": [
      "Android Development"
    ]
  },
  "NTE-5380": {
    "complexity": "Intermediate",
    "speakers": [
      "e05f104edbea6da8b8627427dafc4d7a141d699f"
    ],
    "description": "Let‚Äôs face it, we waste a lot of time on things that don't add any value. Maybe you use the same pattern in different places and copy&paste the same files over and over. Probably the same happens whenever you create a new app or module. What about all the time that you spend in Jira or other tools on tasks like moving tickets or logging time?. What if you could automate all that? Well, you can, and I‚Äôm going to show you how by writing your own Android Studio Plugin.\r\n\r\nIn this talk you will learn how to create a new Android Studio Plugin using Kotlin, create templates to generate code automatically, write live templates to insert frequently-used constructors in your code, easily integrate Android Studio with Jira or other tools, create a brand new full App in minutes using feature modules and much more.",
    "language": "English",
    "title": "Write your own Android Studio Plugin and automate everything",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://proandroiddev.com/write-an-android-studio-plugin-part-1-creating-a-basic-plugin-af956c4f8b50"
  },
  "TGV-6847": {
    "complexity": "Beginner",
    "speakers": [
      "469f96c27458e9ea274351d9be8402ad54b4c803"
    ],
    "description": "Is your team not reviewing code? You should be! Does it feel like you could be getting more out of code reviews? Absolutely! Code reviews are severely underutilized.  Let me show you some approaches to get more value from code reviews for you and your team.  \r\n\r\nI will emphasize code review best practices starting with why you should be performing code reviews.  Some teams don't perform reviews and this is really hurting them in the long run. I will attempt to sell the review process and explain why it is fundamental to our roles as developers.  \r\n\r\nTeams that are performing reviews may feel burdened by doing so and see it as chore. This also is not ideal and I will dig a little deeper and discuss why we feel this way sometimes. What are the strategies to overcome this feeling? Is it possible to enjoy code review?\r\n\r\nAre there shortcuts to work more efficiently at reviewing code? Absolutely! Can some things be automated? What can't? Let me show you some great approaches to making the review process streamlined and efficient. \r\n",
    "language": "English",
    "title": "Getting the most out of code review",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/brianplummer/getting-the-most-out-of-code-review"
  },
  "YYF-6635": {
    "complexity": "Intermediate",
    "speakers": [
      "4c0e1e68242b0243ee0937ba11054aeda38c87ff"
    ],
    "description": "Dagger is a complex tool, we can all agree on that. It's also the most performant and scalable dependency injector we have available -- no wonder it's the official recommendation from Google when it comes to dependency injection for Android apps. And yet, we keep looking for simpler alternatives (usually service locators) just so we don't have to deal with it.\r\n\r\nEven thought Dagger is complex, it doesn't have to be complicated. It's possible to keep things simple and still take advantage of what it offers at its core. There are many ways to setup Dagger, and believe it or not, some of them are quite simple. The goal of this talk is to present a simplistic approach to Dagger, where we can take advantage of dependency injection with minimal boilerplate and optimum performance. On top of that, we'll be looking in details on best practices and how to ensure you're taking the most out of Dagger.\r\n\r\nJoin me if you've had unpleasant experiences with Dagger -- or even if you're happy with your current setup -- so we can take a fresh look on how we can work with it. And if you haven't worked with Dagger before, this is the perfect opportunity to get off on the right foot!",
    "language": "English",
    "title": "It's complicated, but it doesn't have to be: a Dagger journey",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/tfcporciuncula/its-complicated-but-it-doesnt-have-to-be-a-dagger-journey"
  },
  "ODA-3499": {
    "complexity": "Beginner",
    "speakers": [
      "ebe349a84d93b180def160c8a4731efd3b4a44f4"
    ],
    "description": "Do you exactly know what's your app doing when you deliver it to your users? Are you 100% sure? Would you bet on this? You're probably confident with the code you wrote and you know what is doing. \r\n\r\nBut what about the code that others wrote? \r\n\r\nWe pull dependencies from the online repositories every day. Our applications strongly rely on external libraries that are hosted on public Maven repositories. What if one of those library contains some malicious code? Imagine a library that starts harvesting your user data without you knowing it.\r\n\r\nIn this talk we will see how to monitor and protect your application from malicious dependency on the web that might end up in your final compiled App.",
    "language": "English",
    "title": "I have no idea what my app is doing ¬Ø\\_(„ÉÑ)_/¬Ø",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/cortinico/i-have-no-idea-what-my-app-is-doing-nicola-corti-android-dev"
  },
  "ZDM-8801": {
    "complexity": "Beginner",
    "speakers": [
      "d2465df643f7c6cc758eda0bd047621e2ffddaa6"
    ],
    "description": "Une fois rentr√© dans l‚Äôindustrie du d√©veloppement, les challenges de code restent souvent un lointain souvenir des √©tudes, ou dans le meilleur des cas des exercices d‚Äôentretien que l‚Äôon connait par coeur. \r\n\r\nCes d√©fis ont pourtant particip√© √† forger notre passion pour l‚Äôinformatique, ainsi qu‚Äô√† nous initier √† des concepts d‚Äôalgorithmie et de structure de donn√©es, et parfois m√™me √† nous offrir nos premiers pas dans un langage. Des connaissances qui contribuent aujourd‚Äôhui √† la qualit√© de notre travail. \r\n\r\nCurieux de voir ce que ces d√©fis peuvent encore apporter √† nos √©quipes de d√©veloppeurs, nous nous sommes organis√©s pour participer collectivement au challenge adventofcode.com.\r\n\r\nAdvent of Code est-il un bon moyen pour s'initier √† un nouveau langage comme Kotlin ? Cet exercice personnel peut-il s‚Äôinscrire dans une dynamique d‚Äô√©quipe ? Ces challenges ont-ils encore des choses √† nous apprendre ?\r\n\r\nJe vous propose de partager tous les enseignements accumul√©s durant ce mois un peu fou, et qui sait, peut-√™tre cela vous incitera-t-il √† tenter l‚Äôaventure dans votre entreprise ? ",
    "language": "French",
    "title": "Embarquez dans l'aventure Kotlin avec Advent Of Code",
    "tags": [
      "Android Development"
    ]
  },
  "NYI-1720": {
    "complexity": "Intermediate",
    "speakers": [
      "6352b1f89b94a70cb615c7e6ec9af9b97f5e7e16"
    ],
    "description": "`Android` developers are facing a common problem: how to test our applications on many devices without sacrificing too much time or money?\r\n\r\n    How to build and test automatically our applications for each commit?\r\n    How can we find those devices inside the company, whatever its size may be?\r\n    Could there be a directory somewhere that lists those available devices?\r\n    Could we use a device remotely and share it with other developers as if it were in the cloud?\r\n\r\nWhat if you could answer all these questions with the help of a low cost device farm that fits into a pocket? A pocket full of clouds‚Ä¶\r\n\r\nPoddingue, our proposal, aims to tackle this problem thanks to Docker, HypriotOS, Armbian, Gitlab CI and OpenSTF. It‚Äôs an internal solution made of OSS readily available, but it has not yet been publicly announced as a whole.\r\n\r\nThis is a feedback about an idea on its way to production, a long journey full of different feelings.\r\n\r\nAt the end of the talk, you should know how to build your own cloudy pocket farm of Android devices and how to use it to test your applications within your ci pipeline.\r\n\r\nAnd as I am cheap, you will also be surprised at how little money you need to build it.",
    "language": "French",
    "title": "The Android device farm that fits in a (cloudy) pocket",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/gounthar/the-android-device-farm-that-fits-in-a-cloudy-pocket-d6e0efde-82a3-4a05-89d2-4f51051ad315"
  },
  "HXB-5769": {
    "complexity": "Intermediate",
    "speakers": [
      "5bdfb67feee7e1b26c4a99834b480ecbd8318405"
    ],
    "description": "Que l‚Äôon d√©veloppe une application pour smartphones ou pour un IoT, la connectivit√© est un √©l√©ment cl√©. Id√©alement, on voudrait √† la fois minimiser la latence et la consommation d‚Äô√©nergie. Concr√®tement, c‚Äôest difficilement faisable. En balayant tout un tas de technos, du WiFi √† LTE-M, en passant par la 2,3,4,5G, nous verrons les m√©canismes qui sont mis en place pour pr√©server l‚Äôautonomie d‚Äôun appareil et qui in√©vitablement induisent de la latence.",
    "language": "French",
    "title": "Energie, latence: je t'aime, moi non plus",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/pcrepieux/energie-latence-je-taime-moi-non-plus"
  },
  "XVO-2305": {
    "complexity": "Intermediate",
    "speakers": [
      "f58390d96ca39df86db9d7d5a3c5a237261b7c18"
    ],
    "description": "Recruter des talents dans le march√© de l'informatique rel√®ve aujourd'hui de la gageure, et le d√©s√©quilibre entre l'offre et la demande entra√Æne une forte concurrence entre les entreprises.\r\n\r\nQuelles sont les cl√©s pour maximiser les chances de recruter la personne que vous voulez :\r\n\r\n- Vaut-il mieux d√©busquer un _senior_ quitte √† le payer tr√®s cher, ou investir sur un _junior_ ? Et comment le former le cas √©ch√©ant ?\r\n- Que recherchent vraiment les candidats dans votre soci√©t√©, petite ou grande, et comment faire valoir vos atouts ?\r\n- Quels sont les m√©dias disponibles pour rechercher des candidats, et comment sortir du lot sur les r√©seaux ?\r\n- Quels sont les points d'attention pendant le processus de recrutement ?\r\n\r\nNous tenterons d'aborder l'ensemble de ces questions en apportant des r√©ponses circonstanci√©es - bas√©es sur des exemples et des chiffres - et nous nous efforcerons de montrer que le recrutement d'un bon d√©veloppeur est encore possible de nos jours.",
    "language": "French",
    "title": "Recruteurs, d√©veloppeurs, bonne humeur",
    "tags": [
      "Android Development"
    ]
  },
  "IVS-2334": {
    "complexity": "Intermediate",
    "speakers": [
      "ef8733e13308cd31795794c16320420436c045a9"
    ],
    "description": "A core use-case for Facebook for Android is scrolling through a feed of autoplaying videos. We've needed to have a deep understanding of video playback to optimize performance in our apps.\r\n\r\nIn this talk, we‚Äôll examine the details behind video playback on Android. We‚Äôll look at the actors that play a role in delivering decoded video pixels to the screen. We‚Äôll go beyond the high-level MediaPlayer / ExoPlayer components and examine what's happening in the system. Understanding how video playback works under the hood can help you figure out how to get the best performance for your applications.\r\n\r\nWe‚Äôll cover the details behind fundamental graphics components used by video rendering: e.g. SurfaceView, TextureView, SurfaceTexture, etc. These components also enable more complex media rendering such as 360 videos, 3D scenes, and AR experiences.\r\n\r\nWe hope to leave you empowered to look deeper into the Android system beyond the high-level Android framework components and expand your knowledge and expertise.",
    "language": "English",
    "title": "Rendering Video: A Detailed Look at Video Playback on Android",
    "tags": [
      "Android Development"
    ]
  },
  "LNH-0175": {
    "complexity": "Intermediate",
    "speakers": [
      "e8187155eb33d38ede094437f68e66e4fb961811"
    ],
    "description": "Wind back one year ago:\r\n- releasing took us 10 weeks\r\n- our app was plagued by regression\r\n- developers felt completely detached from our users\r\n\r\nClearly our traditional strategy of heavily testing each release (up-front quality) wasn't working. So we decided to flip things around: why not try to reduce the cost of errors instead? Hence we decided to move our Philips Hue Android app to continuous deployment.\r\n\r\nIn this talk you will learn that if releasing is painful, you should actually release even more often. Step by step I'll explain how we moved the Philips Hue Android app to continuous deployment, what our current release process/CI looks like, what changes we made to our overall testing approach, how we empowered developers and testers, and how we made our release process completely painless.",
    "language": "English",
    "title": "Journey to painless releases: Continuous delivery for Philips Hue Android",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/jeroenmols/journey-to-painless-releases-continuous-delivery-for-philips-hue-android"
  },
  "LQF-6083": {
    "complexity": "Beginner",
    "speakers": [
      "115f4a6f8cecc960e8936c3d4429d26004083556"
    ],
    "description": "We Android developers love desert. We love pie. We can't eat up a whole pie, but we can eat as many slices as we want.\r\nAndroid has a new API called Slices which is part of the AndroidX libraries. I'll show you how you can use it to serve slices of your app to any other apps like Google Search or Assistant but also any other app and in any Android desert you love.\r\n",
    "language": "English",
    "title": "Slices up your app!",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/marcpoppleton/slices-up-your-app"
  },
  "HZY-9508": {
    "complexity": "Intermediate",
    "speakers": [
      "de70b5c556753d7ea84b24cf96b188e82d2e84ef"
    ],
    "description": "Many teams are designed so that engineers can take an abstract view of the customer and focus on implementation. But when the customers are other engineers, that entire dynamic is thrown on its head.\r\n\r\nIn this talk, Ty will walk you through the best practices of building great products for developers, from team processes to the technical delivery.\r\n\r\nTopics covered will include: Building customer personas and product strategies, Developer Experience research and analytics, customer empathy and support structures, API Design and usability, testing, code distribution, and creating great documentation.",
    "language": "English",
    "title": "Building for Developers",
    "tags": [
      "Android Development"
    ]
  },
  "EHB-6826": {
    "complexity": "Intermediate",
    "speakers": [
      "0f5e9b36c145d15e6f4e60b330f978dfe843731a"
    ],
    "description": "You're right, that title seems scary: there are so many complicated words and we all know there's no silver bullet in programming.\r\n\r\nSo instead of explaining why an architecture is better than another, let's discuss some issues we face in our daily Android development job and how we can solve those through 3 examples:\r\n\r\n1. I have crashes I can't reproduce.\r\n2. Integration tests are great and necessary to ensure a complete flow is working as expected, but they are complex to set up, and it takes time to run the whole test suite when using an instrumentation tool such as Espresso\r\n3. My legacy app has some \"startActivity\" calls in activites, fragments, custom views, and even in RecyclerView adapters (who did that !?!). I have no visibility regarding the overall navigation of and the code is sometimes hard to follow.\r\n\r\nWe will see today the concepts underneath and how such an architecture can be implemented using functional programming patterns through writing a Kotlin DSL.\r\n\r\nAt the end of the talk, you will get a new, fresh, vision on how to approach programming on Android, through a unidirectional data flow structure, and maybe you'll be interested in implementing a similar architecture.",
    "language": "French",
    "title": "The Rise Of The State Machines: An introduction to predictable state container based architectures for your Android apps",
    "tags": [
      "Android Development"
    ]
  },
  "JJK-6338": {
    "complexity": "Intermediate",
    "speakers": [
      "6ce3af5e301140503905b5496e0a2294e0d649fe"
    ],
    "description": "One of the stated goals of Android Architecture Components is to make it easier for developers to manage the lifecycle of application components. However, when looking at the full picture of combining configuration changes and background memory constraints with static and dynamic state, the basic examples provided in the documentation begin to show their limitations. A more in-depth exploration is needed.\r\n\r\nWe'll look at how to combine bundles and view models to fully persist the state of the application during its lifecycle. Using coroutines for concurrency, we'll see how dynamic state restoration can be achieved.\r\n\r\nGoing over increasingly complex examples of state restoration constraints, we'll see how our implementation of state restoration grows and evolves.",
    "language": "English",
    "title": "State Restoration - The full Picture (With Coroutines)",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/martindevillers/state-restoration-the-full-picture-with-coroutines"
  },
  "PJX-9369": {
    "complexity": "Beginner",
    "speakers": [
      "e3d707eac34855001324081f4355fbb6c4c4a0ad"
    ],
    "description": "Quand on parle d‚Äôaccessibilit√©, on pense automatiquement aux rampes d‚Äôescaliers, ou aux places de parking. Mais qu‚Äôen est-il de l‚Äôaccessibilit√© des applications mobiles ?\r\nCette pr√©sentation fera un tour des pr√©conisations aussi bien UX/UI que techniques. Comment savoir si je dois utiliser un contentDescription ou un labelFor, quelle est la taille id√©ale des cibles tactiles (d'ailleurs c‚Äôest quoi une cible tactile ?), quels indices rajouter √† mes interfaces, quel ratio de contraste de couleur ? LTR vers RTL, comment g√©rer ? Comment utiliser TalkBack ? Et toutes ces questions que l‚Äôon peut se poser (ou que l‚Äôon ne s'est pas encore pos√©es) l√©gitimement.\r\n\r\nRappelez-vous de Gandalf qui se cognait partout dans la petite maison de Bilbon Sacquet, le hobbit. La maison con√ßue pour des Hobbit par des Hobbit, n‚Äô√©tait pas du tout adapt√©e √† Gandalf qui faisait  votre taille.\r\nQuand on con√ßoit / d√©veloppe une application, cela ne demande pas plus d‚Äôeffort de cibler un plus large public‚Ä¶encore faut-il savoir comment.\r\n\r\nCe talk est justement pour tous ceux qui souhaitent en savoir plus √† ce sujet, pour faciliter l'acc√®s √† l'information √† une plus grande partie de la population.",
    "language": "French",
    "title": "L‚Äôaccessibilit√© sur Android en 2019",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://docs.google.com/presentation/d/1zBn4JHEnVZuZaLexq06PsRJ2wxd6xXfNIV5bTxWD66I/edit#slide=id.g510c1a25bf_0_0"
  },
  "VTN-7485": {
    "complexity": "Intermediate",
    "speakers": [
      "370e6c635f61bb5c39e82f411e8a639d0fdaf7ce"
    ],
    "description": "Comment cr√©er un syst√®me capable de stocker et partager des fichiers de mani√®re s√©curis√©e dans une architecture Zero-Knowledge (sans faire confiance aux serveurs) ?\r\n\r\nComment g√©rer le chiffrement de fichiers volumineux et les droits d'acc√®s distants ? Quelles sont les principales limitations ? etc...\r\n\r\nAu travers d'un projet concret (aujourd'hui utilis√© par des millions d'utilisateurs), il vous sera d√©taill√© l'architecture choisie et les d√©tails techniques permettant son impl√©mentation c√¥t√© client et serveur.\r\n\r\n",
    "language": "French",
    "title": "Stockage et partage s√©curis√© de fichiers volumineux",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://drive.google.com/open?id=17Hk6ktZ9iL0XzXeqtzsmyakaEW6PPI5yRNgjxKUaDLg"
  },
  "ZCO-9565": {
    "complexity": "Beginner",
    "speakers": [
      "48dedc7f7959765bcb75a87297c7232d70a317ee"
    ],
    "description": "La plupart d'entre vous connait le d√©veloppement et le cycle de vie des applications Android.\r\nCependant, savez-vous quels m√©canismes sont mis en oeuvre par Android pour isoler les applications les unes des autres?\r\nVoyons ensemble tout ces m√©canismes qui permettent de s√©curiser l'OS mobile le plus utilis√© au monde.\r\n",
    "language": "French",
    "title": "Le sandboxing applicatif d'Android",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://fr.slideshare.net/AdrienGrassein/le-sandboxing-applicatif-dandroid"
  },
  "GMB-7169": {
    "complexity": "Beginner",
    "speakers": [
      "00c74c65d0b0d9a25494245a768c5c3b9fcedd2a"
    ],
    "description": "On vous demande de coder une *vue custom* ? Peur de l'inconnu, le mot canevas fait peur √† entendre, n'ayez crainte, c'est beaucoup beaucoup plus compliqu√© sur papier que √ßa ne l'est dans le code !\r\n\r\nNous apprendrons ensemble : \r\n- comment utiliser les classes Canvas et Paint\r\n- comment dessiner des vues simples : Rectangles, Ronds\r\n- comment dessiner des vues un peu plus complexes : RoundRect, Triangles\r\n- comment animer notre vue custom",
    "language": "French",
    "title": "S‚Äôil te plait, dessine moi une vue",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://fr.slideshare.net/FlorentChampigny/sil-te-plait-dessine-moi-une-vue"
  },
  "NOG-9878": {
    "complexity": "Beginner",
    "speakers": [
      "a1ffbd4128a49788bb27672ad70bed1233dd1d66"
    ],
    "description": "Lorsque l'on travaille sur une application mobile, on se focalise surtout sur l'architecture, l'impl√©mentation des fonctionnalit√©s et √©ventuellement le design.\r\nOr lorsque l'on travaille dans une entreprise avec un d√©partement Marketing, ou simplement si l'on veut optimiser l'usage d'une app, nous sommes syst√©matiquement confront√©s √† l'impl√©mentation des analytics dans notre code. Et cela peut vite tourner au cauchemar si l'architecture de l'application n'y est pas pr√©par√©e ou si le plan de tag n'est pas bien pens√©. Nous verrons ici comment bien architecturer son app pour pouvoir les ajouter sans _tordre_ son code mais √©galement comment bien d√©finir les √©v√®nements et valeur √† remonter.",
    "language": "French",
    "title": "Les analytics c'est bon, mangez-en !",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/n0tnull/les-analytics-cest-bon-mangez-en"
  },
  "ZPO-7428": {
    "complexity": "Intermediate",
    "speakers": [
      "0e8d0e049c4950ba8b15e76897680e14b6101a1d",
      "70987167704d4d09a43b16f559b4d354389bbb46"
    ],
    "description": "Gr√¢ce √† Kotlin/Native, disponible en version 1.0 depuis octobre, il est d√©sormais possible d‚Äôutiliser Kotlin pour cr√©er nos applications back et mobile natives en utilisant un m√™me langage. Mais, en 2019, est-ce d√©j√† une solution r√©ellement viable ? Dans ce talk, nous allons vous pr√©senter un retour d‚Äôexp√©rience sur la cr√©ation de notre application : de la cr√©ation des Web Services avec Ktor aux clients iOS et Android, en passant par l'industrialisation et les tests.\r\n\r\nLe futur du d√©veloppeur mobile serait-il full-stack ?",
    "language": "French",
    "title": "Kotlin end to end: du client au serveur",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/jdatour/android-makers-2019-kotlin-end-to-end-du-client-au-serveur"
  },
  "XWA-9893": {
    "complexity": "Intermediate",
    "speakers": [
      "93dc8e02bdf1513b877ea04d8d94b83ca00d116c"
    ],
    "description": "Si, il y a 10 ans, √† cause d'un √©cosyst√®me encore en construction, HTTPS √©tait un protocole complexe √† mettre en place, aujourd'hui il semble que c'est l'inverse.\r\n\r\nRejouons l'histoire pour d√©couvrir et comprendre ensemble les diff√©rentes failles de s√©curit√© qui ont pouss√© le Web √† passer sur HTTPS ainsi que les impl√©mentations associ√©es sur Android.\r\n\r\n√Ä travers du code et des analyses, impl√©mentons, cassons et s√©curisons ensemble du code r√©seau pour comprendre comment nous en sommes arriv√©s aux impl√©mentations actuelles.\r\n\r\nNous d√©couvrirons ensuite les limitations de 2019 : pouvons-nous emp√™cher tout le monde d'analyser notre traffic ? Qu'est-il possible de faire aujourd'hui, quels sont les risques pour l'utilisateur, le d√©veloppeur, l'entreprise ? Quels sont les outils et bonnes pratiques pour emp√™cher ou au moins ralentir et complexifier nos analyses r√©seau par des personnes malicieuses ?",
    "language": "French",
    "title": "S√©curiser ses appels r√©seau Android, de 2009 √† 2019",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/mikklfr/securing-network-calls-on-android-from-2009-to-2019"
  },
  "HDV-6804": {
    "complexity": "Intermediate",
    "speakers": [
      "d4af9db15742ba17b73c3ad1f57821e25e15983f",
      "ccf70cece5f637610324d4a4fa188ddfdb5aaa03"
    ],
    "description": "Oui, on le sait : vous en avez assez des talks d'architecture mobile. On vous comprend, vous avez d√ª en voir des tonnes : utiles, superflus, simples, alambiqu√©s, certains m√™me impronon√ßables et l√† vous n‚Äôen pouvez plus.\r\n\r\nMais donnez-nous une chance : cette fois-ci nous voulons vous pr√©senter une architecture que nous appr√©cions v√©ritablement : simple, robuste, facilement testable et tirant profit des langages modernes comme Kotlin et Swift - Model-View-Intention. Inspir√©e de Redux, mais adapt√©e aux applications mobiles, MVI se sert d'immutabilit√©, flux de donn√©es unidirectionnel et binding pour faciliter d√©bogage et testing et am√©liorer donc votre productivit√©. Applicable √† Android et iOS, elle permet aussi de simplifier les √©changes entre les √©quipes de d√©veloppeurs d'applications mobiles natives.\r\n\r\nNous vous pr√©senterons les √©l√©ments cl√©s de l'architecture, sa mise en place, ainsi que l'impl√©mentation des cas d'usage les plus communs, issus d'applications que nous avons r√©ellement d√©velopp√©es.",
    "language": "French",
    "title": "MVI : une architecture robuste et moderne",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/viteinfinite/mvi-une-architecture-robuste-et-moderne-pour-vos-applications-mobiles"
  },
  "VOK-7028": {
    "complexity": "Beginner",
    "speakers": [
      "31cb1315078d707f1abda7a29d7309474e9ec0d4"
    ],
    "description": "Developer tools for pixel pushing are one of the more under-developed areas when it comes to Android. Pixel pushing itself is such a tedious process that eats up a lot of development time. Some teams are lucky enough to utilize tools like Figma and Zeplin, which help reduce time when translating designs into something tangible. Others still use the tried and true method of using redlines, screenshots, and photoshop! \r\n\r\nIn this talk we'll go through the journey of pixel pushing, the pain points, and some tips and tricks to help developers and designers speed things up. We'll then talk about Window, a new tool to help you master the art of pixel pushing.\r\nWindow is a new free open source tool with the goal of enhancing the process of pixel pushing.\r\n\r\nFirst is the Window Android App. It lets developers and designers measure, add rulers / grids, and verify placement of what you're seeing on screen. \r\n\r\nThe second is the Window Android library, to integrate into your projects. This library lets you export your Android UI and view it tools like Figma & Sketch. \r\n\r\nWe'll talk about how you can integrate two tools to help you simplify your workload and speed up development time!",
    "language": "English",
    "title": "A New Window Into Pixel Pushing - Discussing new tools to help developers save time when implementing designs!",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/wdziemia/vqa-a-new-window-into-pixel-pushing"
  },
  "GBA-2488": {
    "complexity": "Intermediate",
    "speakers": [
      "0131a2bfbcc298b6be2339b868d91f62cda15336"
    ],
    "description": "GraphQL is not new, and REST is still around. Is it already time to switch? What tools can we rely on, as of today? Is the framework ready and suitable for everyone around?\r\nAt The New York Times, we invested heavily on this technology, so much that we actually created a whole new feature around it. Join us to discover the inner depths of GraphQL, how it works and how it can be integrated within a few days. Explore how you can make sure about what you write and test it out. And when it's time to optimize, maybe we can help it!",
    "language": "English",
    "title": "GraphQL in real life",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/tiwiz/graphql-irl-android-makers"
  },
  "ZPP-9970": {
    "complexity": "Intermediate",
    "speakers": [
      "4be0e0e99b3e04c7154d73ee45444b80d459f466",
      "1fabaecfc95e03a8dfa95d783d59c0eb8f52900d"
    ],
    "description": "As developers, more often than not, you have access to fast and reliable internet connection, all day long. But the users you target won't. Limited data plans, unreliable network coverage, commuting : those are real obstacle that your users will see daily. This means that network will only be available at some times, and not necessarily when the user wants to interact with your application.\r\n\r\nOur talk will focus on creating a user experience with ‚Äòoffline‚Äô being the default working state, and having access to the internet being a bonus for your users. We‚Äôll see how to design your UI/UX to make offline more than an edge case scenario, as well as how to architecture your application, and which tools and libraries can help you to implement it.\r\n",
    "language": "English",
    "title": "‚ÄúMake your app work perfectly offl‚Ä¶‚Äù ‚Äî Connection Interrupted",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/xgouchet/make-your-app-work-perfectly-off-connection-interrupted"
  },
  "JOO-6049": {
    "complexity": "Beginner",
    "speakers": [
      "6f31d29fa5a6aa10cae357cd9c1125f6018bc9ce"
    ],
    "description": "Koin (https://insert-koin.io) is a pragmatic dependency injection framework for Kotlin/Android developers. Let's see how it will make your life easier thanks to the power of Kotlin language: from basics to the setup of Android architecture's components, without forgetting the testing part... And of course, how to migrate your ‚Äúold‚Äù Dagger project.\r\n\r\nAt the menu also, the presentation of the new 2.0 release and some advanced APIs!",
    "language": "English",
    "title": "Dependency injection from zero to hero with Koin",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/agiuliani/dependency-injection-from-zero-to-hero-with-koin"
  },
  "DZK-4920": {
    "complexity": "Intermediate",
    "speakers": [
      "419628cf1742b410881c5661f0cc579944989a00"
    ],
    "description": "At Badoo, we have a long history when it comes to Android development. Since the beginning, the product has experienced huge growth, and our codebase and our team have grown with it. We now have over 400 million registrations, as well as several new apps to support. Over the years we‚Äôve tried MVP, Clean architecture, MVI, and many more approaches, some of them brewed in-house. In this talk we‚Äôll go on an architectural journey and discuss some of the major problems we needed to find solutions for in the last few years, before ending on what is ahead of us.",
    "language": "English",
    "title": "Architectural journey",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/zsoltkocsi/architectural-journey"
  },
  "KAP-5021": {
    "complexity": "Beginner",
    "speakers": [
      "9ff300424fdd88be60cb1679c4e5c0fa1930f537",
      "a59ea6616d4146018fdd4416fa764b15e3afe3ed"
    ],
    "description": "L‚Äôinternationalisation est un sujet complexe comprenant de nombreuses probl√©matiques que beaucoup de startups rencontrent mais priorisent peu dans leurs premi√®res ann√©es d'existence.\n\nRejoignez nous pour d√©couvrir comment nous sommes pass√©s d‚Äôune app pens√©e pour la France √† une app pr√™te √† √™tre utilis√©e dans le monde entier.\n\nNous verrons entre autre comment g√©rer intelligemment les devises, traductions, timezones/dates et distances, ou encore comment activer ou non des fonctionnalit√©s en fonction de la location des utilisateurs",
    "language": "French",
    "title": "Internationalisation √† Kapten",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/vayan/internationalisation-a-kapten"
  },
  "JEH-1710": {
    "complexity": "Intermediate",
    "speakers": [
      "0b9544cbf61ccb54d24bc45ca07a6d8c17d9e220"
    ],
    "description": "You can run Android on a wide range of devices, not just phones and tablets. Building Android from scratch is fun and a great way to learn about the lower levels of the operating system. Imagine - here is a chance to create ANY Android configuration you want.\n\nIn this presentation, I will show you how to take a Raspberry Pi 3 and build Android completely from scratch, using source code from the AOSP (Android Open Source Project). We will need a few things to make this work A Linux kernel that has been configured with the options that Android expects OpenGL ES graphics drivers HAL layers for graphics and networking, amongst other things\n\nThe final hurdle is understanding the way that the RPi boots and adapting it to boot Android. Then, at last, we get to the point where we can write the images to a microSD card and boot up the RPi. One last problem: the Raspberry Pi 3 doesn‚Äôt have a USB OTG port, so we can‚Äôt use ADB in the normal way. No problem, we can use ADB over Ethernet instead.\n\nThis presentation focuses on the Raspberry Pi, but in a similar way you can port Android to many other devices. If it can run Linux, there is a good chance it can run Android.",
    "language": "English",
    "title": "Building Android for the Raspberry Pi",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://www.slideshare.net/chrissimmonds/running-android-on-the-raspberry-pi-android-pie-meets-raspberry-pi"
  },
  "ZNT-7569": {
    "complexity": "Beginner",
    "speakers": [
      "4c6f093c88506849f3e562f0f814df18cd07ee99"
    ],
    "description": "So, you‚Äôve built an app. It'd be nice to make some money with it and instead of only charging a one-off purchase price you‚Äôre maybe considering a free app with extra features. Or you might think about a subscription model to create an ongoing cashflow by selling a service.\n\nDepending on your actual occupation in the Android-ecosystem you might never had the need to look into monetisation of an app. In a nutshell, it‚Äôs a Google Play service - implementation should be smooth and easy and super-straight-forward, right? RIGHT?\n\nIn this talk we're going to cover:\n- Google's various in-app billing offerings and their differences\n- Play Billing and how to implement a working billing flow\n- Dealing with subscriptions in your app and the backend\n- Testing and 3rd party support libraries like Register and BillingX\n- Managing your products in Google Play and Firebase Analytics\n",
    "language": "English",
    "title": "Taking your users‚Äô money: In-app billing from start to best practices",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/therealagentk/taking-your-users-money-in-app-billing-from-start-to-best-practices"
  },
  "LBC-1587": {
    "complexity": "Intermediate",
    "speakers": [
      "4e367c4cc3f6544d04479533a6745780c0bb072f",
      "6e56d272b255d2e5b390a819214552e307e3c2ed"
    ],
    "description": "Toute application logicielle, lorsqu‚Äôelle atteint une certaine taille, se retrouve remplie d‚Äôanti patterns, de code smell et de technologies obsol√®tes. Cette pr√©sentation a pour but de comprendre les probl√®mes les plus fr√©quemment rencontr√©s au sein des applications Android, d‚Äôen √©valuer les enjeux et de les r√©soudre gr√¢ce √† des technologies, librairies et moyens plus modernes.\nCependant, la r√©solution de ces probl√®mes et l‚Äôint√©gration de nouvelles solutions peuvent √™tre d√©licats lorsque l‚Äôapplication impact des millions d‚Äôutilisateurs. Chez Leboncoin, nous vivons cette modernisation technique au quotidien et en avons fait un enjeu majeur pour notre √©quipe mobile.\nNous allons vous pr√©senter notre retour d‚Äôexp√©rience ainsi que les strat√©gies adopt√©es au cours de la modernisation de notre application sur ces derni√®res ann√©es.",
    "language": "French",
    "title": "Retour d‚Äôexp√©rience sur la modernisation technique d‚Äôune Top App",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://speakerdeck.com/crgarridos/retour-dexperience-sur-la-modernisation-technique-dune-top-app"
  },
  "TLN-9826": {
    "complexity": "Beginner",
    "speakers": [
      "c0974f7190ab4ccd9d3c20473e8bef6b1685381e"
    ],
    "description": "A presentation on how we are using Kotlin features to help our team write Espresso integration tests. Explaining how to make test setup independent of backend. Striving to get to high-level, clean tests using Kotlin DSL and extension methods.",
    "language": "English",
    "title": "Leveraging Kotlin to write maintainable UI tests",
    "tags": [
      "Android Development"
    ],
    "presentation": "https://docs.google.com/presentation/d/1dNld_wDZbTKzPY3FVbAVineuvuF8XSRuxjZu3UsyltQ/edit#slide=id.g5594babf55_0_80"
  },
  "OFH-0001": {
    "complexity": "Beginner",
    "speakers": [
      "4da226db53a14dcc70be061a323bc3afd6d9146d",
      "a1ffbd4128a49788bb27672ad70bed1233dd1d66"
    ],
    "description": "Ben Weiss: Dynamic Delivery, Modularization, Instant Apps\n\nAdrien Vitti: Analytics",
    "language": "English",
    "title": "Office Hours",
    "tags": [
      "Android Development"
    ]
  },
  "OFH-0002": {
    "complexity": "Beginner",
    "speakers": [
      "4c6f093c88506849f3e562f0f814df18cd07ee99",
      "822864bbbee048b2f933cbe80197c80b36e291a3"
    ],
    "description": "Kai Koenig: In-app-billing, Webview, Libraries/Modules\n\nLorica Claesson: UX",
    "language": "English",
    "title": "Office Hours",
    "tags": [
      "Android Development"
    ]
  },
  "OFH-0003": {
    "complexity": "Beginner",
    "speakers": [
      "f0b60b05124ad1a0b3e76cca09dd215645931221",
      "5978cd774e924d51f2923d8620f1346a3392263c"
    ],
    "description": "Rebecca Franks: Animations\n\nNick Butcher: UI, Animation, Vector assets, Material Design, Dark Mode, ConstraintLayout",
    "language": "English",
    "title": "Office Hours",
    "tags": [
      "Android Development"
    ]
  },
  "OFH-0004": {
    "complexity": "Beginner",
    "speakers": [
      "072cc4fde1730b8c940eb745e3ab284174184cfd",
      "b86ae9dac45f40c077bbc700eb1af765c11031a5",
      "9294a55b442b986b06aafe0a08db568263a87d23"
    ],
    "description": "John Hoford & Nicolas Roard: ConstraintLayout, MotionLayout\n\nPierre-Yves Ricau: LeakCanary",
    "language": "English",
    "title": "Office Hours",
    "tags": [
      "Android Development"
    ]
  },
  "OFH-0005": {
    "complexity": "Beginner",
    "speakers": [
      "cb2e16407c778831b4f990bfbd556135c507867f",
      "a14457ee24a86a604c55d6774bed5483b630e78f"
    ],
    "description": "Louis CAD: Coroutines, Gradle Kotlin DSL, library development, Domain Driven Development, Bluetooth Low Energy, Camera2 API, Kotlin Multiplatform\n\nEyal LEZMY: Navigation Component, Gradle plugins, ADB, AOSP, CI infrastructure",
    "language": "English",
    "title": "Office Hours",
    "tags": [
      "Android Development"
    ]
  }
}
